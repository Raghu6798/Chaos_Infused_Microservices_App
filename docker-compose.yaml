

services:
  fastapi-app:
    build: ./app
    container_name: fastapi-app
    ports:
      - "8000:8000"
    networks:
      - monitoring
    restart: unless-stopped
    volumes: 
      - log_data:/var/log
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 20s
    # <<< REMOVED >>> The loki logging driver is no longer needed
    # logging:
    #   driver: loki
    #   options:
    #     loki-url: "http://loki:3100/loki/api/v1/push"
    #     loki-batch-size: "400"
  jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: jenkins
    ports:
      # Port for the Jenkins Web UI
      - "8081:8080" 
      # Port for Jenkins agents to connect
      - "50000:50000"
    networks:
      - monitoring
    restart: unless-stopped
    volumes:
      # This is critical! It persists all your Jenkins data (jobs, plugins, config).
      - jenkins_data:/var/jenkins_home
    environment:
      # SECURITY: Change this password in a real environment!
      # This creates an initial admin user for you to avoid the setup wizard.
      - JENKINS_ADMIN_ID=admin
      - JENKINS_ADMIN_PASSWORD=password
      # Optional: Sets the timezone for the Jenkins instance
      - JAVA_OPTS=-Duser.timezone=UTC
    healthcheck:
      # Waits for the login page to be accessible before marking as healthy
      test: ["CMD-SHELL", "curl -f http://localhost:8080/login || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      # Jenkins can be slow to start, so give it a generous start period.
      start_period: 60s 

  # <<< NEW >>> Add the Promtail service
  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    user: "0:0"
    volumes:
      - ./promtail:/etc/promtail_config
      - log_data:/var/log
    # <<< CORRECTED >>> THIS COMMAND NOW LOOKS FOR YOUR 'config.yaml' FILE
    command: -config.file=/etc/promtail_config/config.yaml 
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - loki

  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki:/etc/loki_config
      - loki_data:/data/loki
    command: -config.file=/etc/loki_config/config.yaml
    networks:
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus_config
      - prometheus_data:/prometheus
    command: --config.file=/etc/prometheus_config/prometheus.yaml
    networks:
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:9090/-/ready || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - loki
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5

networks:
  monitoring:
    driver: bridge

volumes:
  # <<< MODIFIED >>> Add the new volume for logs
  log_data:
  loki_data:
  prometheus_data:
  grafana_data:
  jenkins_data: